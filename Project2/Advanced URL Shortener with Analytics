# Simple URL Shortener with Analytics (Flask + SQLite)

from flask import Flask, request, redirect, render_template, session, url_for
from flask_sqlalchemy import SQLAlchemy
from datetime import datetime
import random, string
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///shortener.db'
app.config['SECRET_KEY'] = 'mysecretkey'
db = SQLAlchemy(app)

# ------------------- Database Models -------------------

class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(100), unique=True, nullable=False)
    password = db.Column(db.String(200), nullable=False)

class ShortURL(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    original_url = db.Column(db.String(500), nullable=False)
    short_code = db.Column(db.String(10), unique=True, nullable=False)
    clicks = db.Column(db.Integer, default=0)

# ------------------- Helper Function -------------------

def make_short_code(length=6):
    characters = string.ascii_letters + string.digits
    return ''.join(random.choices(characters, k=length))

# ------------------- Routes -------------------

@app.route('/')
def home():
    return render_template('home.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        username = request.form['username']
        password = generate_password_hash(request.form['password'])
        if User.query.filter_by(username=username).first():
            return 'Username already taken.'
        new_user = User(username=username, password=password)
        db.session.add(new_user)
        db.session.commit()
        return 'Registered successfully!'
    return render_template('register.html')

@app.route('/shorten', methods=['POST'])
def shorten():
    url = request.form['url']
    code = make_short_code()
    short = ShortURL(original_url=url, short_code=code)
    db.session.add(short)
    db.session.commit()
    return f"Shortened URL: {request.host_url}s/{code}"

@app.route('/s/<code>')
def redirect_short(code):
    link = ShortURL.query.filter_by(short_code=code).first()
    if link:
        link.clicks += 1
        db.session.commit()
        return redirect(link.original_url)
    return 'Invalid link'

@app.route('/stats/<code>')
def stats(code):
    link = ShortURL.query.filter_by(short_code=code).first()
    if link:
        return f"URL: {link.original_url} | Clicks: {link.clicks}"
    return 'Link not found'

# ------------------- Run the App -------------------

if __name__ == '__main__':
    with app.app_context():
        db.create_all()
    app.run(debug=True)



# Your project folder should contain a subfolder named templates, and inside that folder, you should place your HTML files such as home.html and register.html.
<!-- templates/home.html -->
<!DOCTYPE html>
<html>
<head>
    <title>URL Shortener</title>
</head>
<body>
    <h1>Welcome to the URL Shortener</h1>
    <form action="/shorten" method="post">
        <input type="text" name="url" placeholder="Enter long URL" required>
        <button type="submit">Shorten</button>
    </form>
</body>
</html>


<!-- templates/register.html -->
<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
</head>
<body>
    <h1>Register</h1>
    <form method="post">
        <input type="text" name="username" placeholder="Username" required><br><br>
        <input type="password" name="password" placeholder="Password" required><br><br>
        <button type="submit">Register</button>
    </form>
</body>
</html>


<!-- templates/home.html -->
<!DOCTYPE html>
<html>
<head>
    <title>URL Shortener</title>
</head>
<body>
    <h1>Welcome to the URL Shortener</h1>
    <form action="/shorten" method="post">
        <input type="text" name="url" placeholder="Enter long URL" required>
        <button type="submit">Shorten</button>
    </form>
</body>
</html>

